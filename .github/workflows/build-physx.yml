name: Build-PhysX

on:
  workflow_dispatch:
    inputs:
      physxversion:
        description: "physx-sys version. (sample 0.11.1)"
        required: true

jobs:
  update-package:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./src/libmagicphysx
    steps:
      - uses: actions/checkout@v4
      - run: cargo test update_package_version -- ${{ inputs.physxversion }} --nocapture

      - name: Check update
        id: check_update
        run: git diff --exit-code || echo "changed=1"

      - name: Commit files
        id: commit
        if: ${{ steps.check_update.outputs.changed == '1' }}
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add --all
          git commit -m "Update cargo.toml physx-sys version to ${{ inputs.physxversion }}" -a

      - name: Push changes
        if: ${{ steps.check_update.outputs.changed == '1' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  # Rust Platform target https://doc.rust-lang.org/nightly/rustc/platform-support.html
  # TODO: use matrix

  win-x64:
    needs: [update-package]
    runs-on: windows-2019
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./src/libmagicphysx
    steps:
      - uses: actions/checkout@v4
      - run: rustup target add x86_64-pc-windows-msvc
      - run: cargo build --target x86_64-pc-windows-msvc --release
      - uses: Cysharp/Actions/.github/actions/upload-artifact@main
        with:
          name: win-x64
          path: ./src/libmagicphysx/target/x86_64-pc-windows-msvc/release/magicphysx.dll
          retention-days: 1

  linux-x64:
    needs: [update-package]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./src/libmagicphysx
    steps:
      - uses: actions/checkout@v4
      - run: rustup target add x86_64-unknown-linux-gnu
      - run: cargo build --target x86_64-unknown-linux-gnu --release
      - uses: Cysharp/Actions/.github/actions/upload-artifact@main
        with:
          name: linux-x64
          path: ./src/libmagicphysx/target/x86_64-unknown-linux-gnu/release/libmagicphysx.so
          retention-days: 1

  linux-arm64:
    needs: [update-package]
    runs-on: ubuntu-latest
    container: ghcr.io/cross-rs/aarch64-unknown-linux-gnu:edge
    timeout-minutes: 30
    env:
      TARGET_CXX: g++
    defaults:
      run:
        working-directory: ./src/libmagicphysx
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: aarch64-unknown-linux-gnu
      - run: cargo build --target aarch64-unknown-linux-gnu --release
      - uses: Cysharp/Actions/.github/actions/upload-artifact@main
        with:
          name: linux-arm64
          path: ./src/libmagicphysx/target/aarch64-unknown-linux-gnu/release/libmagicphysx.so
          retention-days: 1

  osx-x64:
    needs: [update-package]
    runs-on: macos-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./src/libmagicphysx
    steps:
      - uses: actions/checkout@v4
      - run: rustup target add x86_64-apple-darwin
      - run: cargo build --target x86_64-apple-darwin --release
      - uses: Cysharp/Actions/.github/actions/upload-artifact@main
        with:
          name: osx-x64
          path: ./src/libmagicphysx/target/x86_64-apple-darwin/release/libmagicphysx.dylib
          retention-days: 1

  osx-arm64:
    needs: [update-package]
    runs-on: macos-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./src/libmagicphysx
    steps:
      - uses: actions/checkout@v4
      - run: rustup target add aarch64-apple-darwin
      - run: cargo build --target aarch64-apple-darwin --release
      - uses: Cysharp/Actions/.github/actions/upload-artifact@main
        with:
          name: osx-arm64
          path: ./src/libmagicphysx/target/aarch64-apple-darwin/release/libmagicphysx.dylib
          retention-days: 1

  # download binary and git push

  git-push:
    needs: [win-x64, linux-x64, linux-arm64, osx-x64, osx-arm64]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: Cysharp/Actions/.github/actions/download-artifact@main
        with:
          name: win-x64
          path: src/MagicPhysX/runtimes/win-x64/native/
      - run: mv ./src/MagicPhysX/runtimes/win-x64/native/magicphysx.dll ./src/MagicPhysX/runtimes/win-x64/native/libmagicphysx.dll
      - uses: Cysharp/Actions/.github/actions/download-artifact@main
        with:
          name: linux-x64
          path: src/MagicPhysX/runtimes/linux-x64/native
      - uses: Cysharp/Actions/.github/actions/download-artifact@main
        with:
          name: linux-arm64
          path: src/MagicPhysX/runtimes/linux-arm64/native
      - uses: Cysharp/Actions/.github/actions/download-artifact@main
        with:
          name: osx-x64
          path: src/MagicPhysX/runtimes/osx-x64/native
      - uses: Cysharp/Actions/.github/actions/download-artifact@main
        with:
          name: osx-arm64
          path: src/MagicPhysX/runtimes/osx-arm64/native
      - run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add --all
          git commit -m "Update physx lib runtime" -a
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
